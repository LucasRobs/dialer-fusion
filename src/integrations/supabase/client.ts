
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://wwzlfjoiuoocbatfizac.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Ind3emxmam9pdW9vY2JhdGZpemFjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDMzNTY5ODEsImV4cCI6MjA1ODkzMjk4MX0.D10AhJ4BeF4vWtH--RYM7WKwePOlZOhEX2tRF0hTfHU";
// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Voice configuration - exported to be used elsewhere in the app
export const VOICE_CONFIG = {
  MODEL: "eleven_multilingual_v2",
  VOICE_NAME: "Voz Feminina (PT-BR)",
  VOICE_ID: "33B4UnXyTNbgLmdEDh5P",
  LANGUAGE: "pt-BR"
};

// Vapi API configuration - for direct API calls
export const VAPI_CONFIG = {
  API_KEY: "494da5a9-4a54-4155-bffb-d7206bd72afd",
  API_URL: "https://api.vapi.ai"
};

// Create and export the Supabase client with debug logging enabled
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    },
    db: {
      schema: 'public',
    },
    global: {
      // Enable more detailed error messages during development
      fetch: (url, options) => fetch(url, options),
    },
  }
);

// Add a simple helper to check connection
export const checkSupabaseConnection = async () => {
  try {
    const { data, error } = await supabase.from('assistants').select('count').limit(1);
    if (error) {
      console.error('Supabase connection check failed:', error);
      return false;
    }
    console.log('Supabase connection confirmed successful');
    return true;
  } catch (err) {
    console.error('Supabase connection exception:', err);
    return false;
  }
};
